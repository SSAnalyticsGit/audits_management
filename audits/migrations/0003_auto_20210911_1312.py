# Generated by Django 3.1.4 on 2021-09-11 12:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('audits', '0002_schedule_site_vendor'),
    ]

    operations = [
        migrations.CreateModel(
            name='PageFive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('one', models.BooleanField(default=False, null=True, verbose_name='Will ladder or scaffolds be required for access to the roof?')),
                ('two', models.BooleanField(default=False, null=True, verbose_name='Will fall protection be required while working on the roof?')),
                ('three', models.BooleanField(default=False, null=True, verbose_name='Is there enough access and egress at proposed equipment room?')),
                ('four', models.BooleanField(default=False, null=True, verbose_name='Does the proposed equipment room has an existing smoke/fire alarm?')),
                ('five', models.BooleanField(default=False, null=True, verbose_name='Is there enough access and egress at the generator area. If we are dealing with a confined space please state?')),
                ('six', models.BooleanField(default=False, null=True, verbose_name='Are there existing bund walls/secondary spill contigency arrangement around the diesel storage tank?')),
                ('seven', models.BooleanField(default=False, null=True, verbose_name='Are there visible signs of oil spillage around the generator area/plinth? Please take date-staped pictures')),
                ('eight', models.BooleanField(default=False, null=True, verbose_name='Are there any overhead power cables that will be a problem for work at height?')),
                ('nine', models.BooleanField(default=False, null=True, verbose_name='Are there any environmental or safety concerns?')),
            ],
        ),
        migrations.CreateModel(
            name='PageFour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_time', models.CharField(blank=True, max_length=10, null=True)),
                ('closing_time', models.CharField(blank=True, max_length=10, null=True)),
                ('monday_to_friday', models.BooleanField(default=False)),
                ('monday_to_saturday', models.BooleanField(default=False)),
                ('monday_to_sunday', models.BooleanField(default=False)),
                ('available', models.BooleanField(default=False)),
                ('on_what_floor', models.CharField(blank=True, max_length=20, null=True)),
                ('dimension', models.CharField(blank=True, max_length=30, null=True)),
                ('distance_to_generator', models.CharField(blank=True, max_length=10, null=True)),
                ('not_available', models.BooleanField(default=False)),
                ('picture', models.ImageField(default='default5.jpg', upload_to='er_pics')),
                ('bungalow', models.BooleanField(default=False)),
                ('one_storey', models.BooleanField(default=False)),
                ('two_storey', models.BooleanField(default=False)),
                ('three_storey', models.BooleanField(default=False)),
                ('multi_resident', models.BooleanField(default=False)),
                ('multi_commercial', models.BooleanField(default=False)),
                ('mall', models.BooleanField(default=False)),
                ('building_picture', models.ImageField(default='default1.jpg', upload_to='building_pics')),
                ('roof_picture', models.ImageField(default='default2.jpg', upload_to='roof_pics')),
                ('changeover_box_picture', models.ImageField(default='default3.jpg', upload_to='changeover_pics')),
                ('Distribution_board_picture', models.ImageField(default='default4.jpg', upload_to='db_pics')),
            ],
        ),
        migrations.CreateModel(
            name='PageOne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('site_full_address', models.CharField(blank=True, max_length=120, null=True)),
                ('gps_coordinate', models.CharField(blank=True, max_length=30, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=30, null=True)),
                ('date', models.DateTimeField()),
                ('location', models.TextField(null=True, verbose_name='ACs by Location')),
                ('split_1', models.IntegerField(null=True, verbose_name='Number of 1HP')),
                ('split_2', models.IntegerField(null=True, verbose_name='Number of 1.5HP')),
                ('split_3', models.IntegerField(null=True, verbose_name='Number of 2HP')),
                ('split_4', models.IntegerField(null=True, verbose_name='Number of 2.5HP')),
                ('split_5', models.IntegerField(null=True, verbose_name='Number of 3HP')),
                ('split_6', models.IntegerField(null=True, verbose_name='Number of 5HP')),
                ('split_7', models.IntegerField(null=True, verbose_name='Number of 10HP')),
                ('comment', models.TextField(null=True, verbose_name='Comment')),
                ('rooftop', models.BooleanField(default=False, null=True)),
                ('ground_mounted', models.BooleanField(default=False, null=True)),
                ('rooftop_ground_mounted', models.BooleanField(default=False, null=True)),
                ('florescent', models.CharField(blank=True, max_length=50, null=True)),
                ('LED', models.CharField(blank=True, max_length=50, null=True)),
                ('halogen', models.CharField(blank=True, max_length=50, null=True)),
                ('energy_saver', models.CharField(blank=True, max_length=50, null=True)),
                ('panel_light', models.CharField(blank=True, max_length=50, null=True)),
                ('others', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageSeven',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageSix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roof_dimension', models.CharField(blank=True, max_length=20, null=True)),
                ('total_area', models.IntegerField()),
                ('number_of_panels', models.IntegerField()),
                ('roof_type', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_sheet_material', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_sheet_thickness', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_sheet_lapping', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_truss', models.CharField(blank=True, max_length=20, null=True)),
                ('not_needed', models.BooleanField(default=False)),
                ('minor_repair', models.BooleanField(default=False)),
                ('major_repair', models.BooleanField(default=False)),
                ('complete_replacement', models.BooleanField(default=False)),
                ('general_comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageThree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connects_to_grid', models.BooleanField(null=True)),
                ('connects_to_solar', models.BooleanField(null=True)),
                ('connects_to_generator', models.BooleanField(null=True)),
                ('has_dedicated_transformer', models.BooleanField(null=True)),
                ('genset_1', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_2', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_3', models.CharField(blank=True, max_length=60, null=True)),
                ('transformer', models.CharField(blank=True, max_length=60, null=True)),
                ('item1', models.CharField(blank=True, max_length=100, null=True)),
                ('item2', models.CharField(blank=True, max_length=100, null=True)),
                ('item3', models.CharField(blank=True, max_length=100, null=True)),
                ('item4', models.CharField(blank=True, max_length=100, null=True)),
                ('item5', models.CharField(blank=True, max_length=100, null=True)),
                ('item6', models.CharField(blank=True, max_length=100, null=True)),
                ('item7', models.CharField(blank=True, max_length=100, null=True)),
                ('inverter_1', models.CharField(blank=True, max_length=100, null=True)),
                ('inverter_2', models.CharField(blank=True, max_length=100, null=True)),
                ('inverter_3', models.CharField(blank=True, max_length=100, null=True)),
                ('ups_1', models.CharField(blank=True, max_length=100, null=True)),
                ('ups_2', models.CharField(blank=True, max_length=100, null=True)),
                ('ups_3', models.CharField(blank=True, max_length=100, null=True)),
                ('stabilizer_1', models.CharField(blank=True, max_length=100, null=True)),
                ('stabilizer_2', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_1', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_2', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_3', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_4', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageTwo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desktop', models.IntegerField(blank=True, null=True)),
                ('laptop', models.IntegerField(blank=True, null=True)),
                ('printer', models.IntegerField(blank=True, null=True)),
                ('counting_machine', models.IntegerField(blank=True, null=True)),
                ('scanner', models.IntegerField(blank=True, null=True)),
                ('atms', models.IntegerField(blank=True, null=True)),
                ('tv', models.IntegerField(blank=True, null=True)),
                ('water_dispenser', models.IntegerField(blank=True, null=True)),
                ('exchange_rate_board', models.IntegerField(blank=True, null=True)),
                ('signage_light', models.IntegerField(blank=True, null=True)),
                ('water_pump', models.IntegerField(blank=True, null=True)),
                ('fan', models.IntegerField(blank=True, null=True)),
                ('microwave', models.IntegerField(blank=True, null=True)),
                ('card_printer', models.IntegerField(blank=True, null=True)),
                ('time_stamping_machine', models.IntegerField(blank=True, null=True)),
                ('shredder', models.IntegerField(blank=True, null=True)),
                ('sorting_machine', models.IntegerField(blank=True, null=True)),
                ('fridge', models.IntegerField(blank=True, null=True)),
                ('mantrap_door', models.IntegerField(blank=True, null=True)),
                ('hand_dryer', models.IntegerField(blank=True, null=True)),
                ('others', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='schedule',
            name='status',
            field=models.CharField(choices=[('Scheduled for Audit', 'Scheduled for Audit'), ('Scheduled for Data-logging', 'Scheduled for Data-logging'), ('Scheduled for Audit & Data-logging', 'Scheduled for Audit & Data-logging'), ('Pending Schedule', 'Pending Schedule'), ('Audited', 'Audited'), ('Data-logged', 'Data-logged'), ('Audited & Data-logged', 'Audited & Data-logged')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='site',
            name='contact',
            field=models.CharField(help_text='Contact Person', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='site',
            name='name',
            field=models.CharField(help_text='Branch', max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_five', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pagefive', verbose_name='Safety')),
                ('page_four', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pagefour', verbose_name='Operation Hours | Building | ER Information')),
                ('page_one', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pageone', verbose_name='Customer Information | Cooling | Roof and Lightings')),
                ('page_seven', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pageseven', verbose_name='Signoff | General Comments')),
                ('page_six', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pagesix', verbose_name='Roof Information')),
                ('page_three', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pagethree', verbose_name='Existing Power Information')),
                ('page_two', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.pagetwo', verbose_name='Appliances')),
            ],
        ),
    ]
